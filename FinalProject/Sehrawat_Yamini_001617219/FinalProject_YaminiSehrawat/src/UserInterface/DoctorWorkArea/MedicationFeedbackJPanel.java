/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.DoctorWorkArea;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Medication.Drug;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.DrugIssueRequest;
import Business.WorkQueue.DrugReviewRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author PC
 */
public class MedicationFeedbackJPanel extends javax.swing.JPanel {

    /**
     * Creates new form MedicationFeedbackJPanel
     */
    
    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private Enterprise enterprise;
    private EcoSystem ecoSystem;
    public MedicationFeedbackJPanel(JPanel upc, UserAccount ua, Enterprise ep, EcoSystem es) {
        initComponents();
        
        this.userProcessContainer = upc;
        this.userAccount = ua;
        this.enterprise = ep;
        this.ecoSystem = es;
        populateDrugComboBox();
        populateDrugAnalysisTable();
    }
    
    private void populateDrugComboBox() {
        drugComboBox.removeAllItems();
        for (Drug drug : ecoSystem.getDrugCatalog().getDrugCatalog()) {
            if(drug.getStatus() == null){
            }
            else if (drug.getStatus().equals("Approved")) {
                drugComboBox.addItem(drug);
            }
        }
    }
    
    private void populateDrugAnalysisTable() {
        DefaultTableModel model = (DefaultTableModel) medicineAnalysisTable.getModel();
        model.setRowCount(0);
        for (WorkRequest workRequest : enterprise.getWorkQueue().getWorkRequestList()) {
            if (workRequest instanceof DrugReviewRequest) {
                DrugReviewRequest reviewRequest = (DrugReviewRequest) workRequest;
                for (Drug drug : reviewRequest.getDrugCatalog().getDrugCatalog()) {
                    Object[] row = new Object[9];
                    row[0] = reviewRequest.getRequestID();
                    row[1] = drug;
                    row[2] = drug.getDisease().getDiseaseName();
                    row[3] = drug.getSideEffects();
                    row[4] = reviewRequest.getSender().getPerson().getName();
                    row[5] = reviewRequest.getPharmaceuticalName();
                    row[6] = reviewRequest.getCallBackRequest() == null ? ("No") : (reviewRequest.getCallBackRequest());;
                    row[7] = reviewRequest.getStatus();
                    row[8] = reviewRequest;
                    model.addRow(row);
                }
            }
        }
    }

    private void populateDrugIssueTable(Drug dr){
       DefaultTableModel model = (DefaultTableModel) medicineIssueTable.getModel();
       model.setRowCount(0); 
        
        for(WorkRequest workRequest:dr.getWorkQueue().getWorkRequestList()){
            if(workRequest instanceof DrugIssueRequest){
                DrugIssueRequest drugIssueRequest = (DrugIssueRequest)workRequest;
                if(drugIssueRequest.getSender().getUserName().equals(userAccount.getUserName())){
                    Object[] row = new Object[9];
                    row[0] = drugIssueRequest.getRequestID();
                    row[1] = dr.getDrugName();
                    row[2] = dr;
                    row[3] = dr.getDisease().getDiseaseName();
                    row[4] = drugIssueRequest.getDrugSafetyIssue();
                    row[5] = drugIssueRequest.getSender().getPerson().getName();
                    row[6] = dr.getPharmaceuticalName();
                    row[7] = drugIssueRequest.getCallBackRequest() == null ? ("No") : (drugIssueRequest.getCallBackRequest());
                    row[8] = drugIssueRequest;
                    model.addRow(row);
                }
            }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        sendDrugAfterUseBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        medicineAnalysisTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        drugComboBox = new javax.swing.JComboBox();
        refreshBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        issueTextArea = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        medicineIssueTable = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        drugIssueTextArea = new javax.swing.JTextArea();
        sendDrugIssueBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 204, 204));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        jLabel1.setText("Medication Feedback Panel");

        sendDrugAfterUseBtn.setBackground(new java.awt.Color(255, 153, 153));
        sendDrugAfterUseBtn.setFont(new java.awt.Font("Tahoma", 1, 23)); // NOI18N
        sendDrugAfterUseBtn.setText("Send");
        sendDrugAfterUseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendDrugAfterUseBtnActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel3.setText("Send Issue :");

        jScrollPane1.setFont(new java.awt.Font("Tahoma", 0, 23)); // NOI18N

        medicineAnalysisTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Request ID", "Medicine Code", "Disease Cure", "Safety Issues", "Sender", "Pharmaneutical", "Calleback", "Status", "Place"
            }
        ));
        jScrollPane1.setViewportView(medicineAnalysisTable);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setText("Medicine : ");

        drugComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        drugComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drugComboBoxActionPerformed(evt);
            }
        });

        refreshBtn.setBackground(new java.awt.Color(255, 153, 153));
        refreshBtn.setFont(new java.awt.Font("Tahoma", 1, 23)); // NOI18N
        refreshBtn.setText("Refresh");
        refreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtnActionPerformed(evt);
            }
        });

        issueTextArea.setColumns(20);
        issueTextArea.setFont(new java.awt.Font("Monospaced", 0, 20)); // NOI18N
        issueTextArea.setRows(5);
        jScrollPane2.setViewportView(issueTextArea);

        jScrollPane3.setFont(new java.awt.Font("Tahoma", 0, 23)); // NOI18N

        medicineIssueTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Request ID", "Medicine", "Medicine Code", "Disease Cure", "Safety Issues", "Sender", "Pharmaneutical", "Calleback", "Status"
            }
        ));
        jScrollPane3.setViewportView(medicineIssueTable);

        drugIssueTextArea.setColumns(20);
        drugIssueTextArea.setFont(new java.awt.Font("Monospaced", 0, 20)); // NOI18N
        drugIssueTextArea.setRows(5);
        jScrollPane4.setViewportView(drugIssueTextArea);

        sendDrugIssueBtn.setBackground(new java.awt.Color(255, 153, 153));
        sendDrugIssueBtn.setFont(new java.awt.Font("Tahoma", 1, 23)); // NOI18N
        sendDrugIssueBtn.setText("Send Drug Review");
        sendDrugIssueBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendDrugIssueBtnActionPerformed(evt);
            }
        });

        backBtn.setBackground(new java.awt.Color(255, 153, 153));
        backBtn.setFont(new java.awt.Font("Tahoma", 1, 23)); // NOI18N
        backBtn.setText(">> back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 3, 23)); // NOI18N
        jLabel4.setText("Pharmeceutical Medicines Analysis Chart :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(48, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(385, 385, 385)
                        .addComponent(jLabel1)
                        .addContainerGap(477, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(sendDrugAfterUseBtn))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1219, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 1219, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(70, 70, 70)
                                        .addComponent(drugComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(798, 798, 798)
                                        .addComponent(refreshBtn)))
                                .addComponent(jLabel4)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(backBtn)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(sendDrugIssueBtn)
                                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel1)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(drugComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(refreshBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(sendDrugAfterUseBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(backBtn)
                        .addGap(277, 277, 277))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(sendDrugIssueBtn)
                        .addGap(149, 149, 149))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void sendDrugAfterUseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendDrugAfterUseBtnActionPerformed
        String issue = issueTextArea.getText();
        Drug drug = (Drug) drugComboBox.getSelectedItem();

        if((issue.equals(""))||(issue.equals(null))){
            JOptionPane.showMessageDialog(null, "Please fill up the details in the box provided!");
            return;
        }

        if(drug == null){
            JOptionPane.showMessageDialog(null, "Please select the appropriate Drug!");
            return;
        }

        DrugIssueRequest issueRequest = new DrugIssueRequest();
        issueRequest.setSender(userAccount);
        issueRequest.setStatus("Sent");
        issueRequest.setEnterpriseCity(enterprise.getAddress().getCity());
        issueRequest.setDrugSafetyIssue(issue);
        issueRequest.setePriseId(enterprise.getOrganizationID());
        issueRequest.setePriseName(enterprise.getName());
        issueRequest.setCallBackRequest("Waiting");

        for (Drug drug1 : ecoSystem.getDrugCatalog().getDrugCatalog()) {
            if (drug.getDrugId() == drug1.getDrugId()) {
                drug1.getWorkQueue().getWorkRequestList().add(issueRequest);
            }
        }
        Drug drug3 = (Drug) drugComboBox.getSelectedItem();
        if (drug3 != null) {
            populateDrugIssueTable(drug3);
        }
        JOptionPane.showMessageDialog(null, "Request sent!");

    }//GEN-LAST:event_sendDrugAfterUseBtnActionPerformed

    private void drugComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drugComboBoxActionPerformed
        Drug drug = (Drug) drugComboBox.getSelectedItem();
        if (drug != null) {
            populateDrugIssueTable(drug);
        }
    }//GEN-LAST:event_drugComboBoxActionPerformed

    private void refreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtnActionPerformed
        Drug drug = (Drug) drugComboBox.getSelectedItem();
        if (drug != null) {
            populateDrugIssueTable(drug);
        }
    }//GEN-LAST:event_refreshBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed

    private void sendDrugIssueBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendDrugIssueBtnActionPerformed
        String issue = drugIssueTextArea.getText();
        if (issue.equals("") || issue.equals(null)) {
            JOptionPane.showMessageDialog(null, "Please submit your feedback in the text area!");
            return;
        }
        int selectedRow = medicineAnalysisTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row to proceed");
            return;
        }
        
        
        DrugReviewRequest dReviewRequest = (DrugReviewRequest) medicineAnalysisTable.getValueAt(selectedRow, 8);
        dReviewRequest.setDrugReviews(issue);
        dReviewRequest.setStatus("Issue sent");
        dReviewRequest.setIsReplied("Yes");
        dReviewRequest.setReceiver(userAccount);
        populateDrugAnalysisTable();
        JOptionPane.showMessageDialog(null, "Request sent!");
    }//GEN-LAST:event_sendDrugIssueBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JComboBox drugComboBox;
    private javax.swing.JTextArea drugIssueTextArea;
    private javax.swing.JTextArea issueTextArea;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable medicineAnalysisTable;
    private javax.swing.JTable medicineIssueTable;
    private javax.swing.JButton refreshBtn;
    private javax.swing.JButton sendDrugAfterUseBtn;
    private javax.swing.JButton sendDrugIssueBtn;
    // End of variables declaration//GEN-END:variables
}
