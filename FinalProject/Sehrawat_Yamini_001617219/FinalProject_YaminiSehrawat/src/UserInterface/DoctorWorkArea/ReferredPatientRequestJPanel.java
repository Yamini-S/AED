/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.DoctorWorkArea;

import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Patient.Patient;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.DoctorToDoctorRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author PC
 */
public class ReferredPatientRequestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ReferredPatientRequestJPanel
     */
    
    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private Enterprise enterprise;
    private EcoSystem ecoSystem;
    public ReferredPatientRequestJPanel(JPanel upc, UserAccount ua, Enterprise ep, EcoSystem es) {
        initComponents();
        
        this.userProcessContainer = upc;
        this.enterprise = ep;
        this.userAccount = ua;
        this.ecoSystem = es;
        populateReferredPatientList();
    }
    
    private void populateReferredPatientList(){
        
        DefaultTableModel model = (DefaultTableModel) patientInfoTable.getModel();
        model.setRowCount(0);
        
        Employee employee = (Employee) userAccount.getPerson();
         for(WorkRequest workRequest : employee.getWorkQueue().getWorkRequestList()){
             if(workRequest instanceof DoctorToDoctorRequest){
                 DoctorToDoctorRequest doctorRequest = (DoctorToDoctorRequest) workRequest;
                 Object[] row = new Object[6];
                 row[0] = doctorRequest.getSender().getPerson().getName();
                 row[1] = doctorRequest.getPatient();
                 row[2] = doctorRequest.getPatient().getPatientId();
                 row[3] = doctorRequest.getHospitalName();
                 row[4] = doctorRequest;
                 row[5] = doctorRequest.getRequestDate();
                 model.addRow(row);
             }
         }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        patientInfoTable = new javax.swing.JTable();
        backBtn = new javax.swing.JButton();
        patientRecordBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 204, 204));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        jLabel1.setText("Referred Patient Request Panel");

        patientInfoTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Referred By", "Patient Name", "Patient ID", "Hospital", "Status", "Timestamp"
            }
        ));
        jScrollPane1.setViewportView(patientInfoTable);

        backBtn.setBackground(new java.awt.Color(255, 153, 153));
        backBtn.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        backBtn.setText(">> Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        patientRecordBtn.setBackground(new java.awt.Color(255, 153, 153));
        patientRecordBtn.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        patientRecordBtn.setText("Patient Medical Record");
        patientRecordBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientRecordBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(patientRecordBtn)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(337, 337, 337)
                            .addComponent(jLabel1))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(184, 184, 184)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(backBtn)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 851, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(202, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(jLabel1)
                .addGap(70, 70, 70)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(69, 69, 69)
                .addComponent(patientRecordBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 369, Short.MAX_VALUE)
                .addComponent(backBtn)
                .addGap(58, 58, 58))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void patientRecordBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientRecordBtnActionPerformed
        int selectedRow = patientInfoTable.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null, "Please select a row to first!");
            return;
        }
        Patient patient = (Patient) patientInfoTable.getValueAt(selectedRow, 1);
        DoctorToDoctorRequest request = (DoctorToDoctorRequest) patientInfoTable.getValueAt(selectedRow, 4);
        request.setStatus("Checkup Done");
        if (patient != null) {
            PatientMedicalRecordJPanel panel = new PatientMedicalRecordJPanel(userProcessContainer, patient, userAccount, enterprise, ecoSystem  );
            userProcessContainer.add("PatientMedicalRecordJPanel", panel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_patientRecordBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable patientInfoTable;
    private javax.swing.JButton patientRecordBtn;
    // End of variables declaration//GEN-END:variables
}
