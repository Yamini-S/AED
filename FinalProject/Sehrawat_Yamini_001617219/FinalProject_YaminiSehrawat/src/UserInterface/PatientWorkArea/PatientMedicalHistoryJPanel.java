/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.PatientWorkArea;

import Business.HealthIssues.Disease;
import Business.Organization.Organization;
import Business.Patient.Patient;
import Business.PatientHealthRecord.PatientVitalSign;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author PC
 */
public class PatientMedicalHistoryJPanel extends javax.swing.JPanel {

    /**
     * Creates new form PatientMedicalHistoryJPanel
     */
    
    private JPanel userProcessContainer;
    private Organization organization;
    private UserAccount userAccount;
    private Patient patient;
    
    public PatientMedicalHistoryJPanel(JPanel upc, Patient p, Organization org, UserAccount ua) {
        initComponents();
        
        this.userProcessContainer = upc;
        this.organization = org;
        this.patient = p;
        this.userAccount = ua;
        populateMedicalRecordTable();
    }
    
    private void populateMedicalRecordTable(){
        DefaultTableModel model = (DefaultTableModel) medicalHistoryTable.getModel();
        model.setRowCount(0);
        
        for (PatientVitalSign vitalSign : patient.getPatientVitalSignHistory().getPatientVitalSignList()) {
            Object[] row = new Object[8];
            row[0] = vitalSign;
            if( vitalSign.getDisease() !=null ) {
                row[1] = vitalSign.getDisease().getDiseaseName() == null ? ("N/A") : vitalSign.getDisease().getDiseaseName();
                row[2] = vitalSign.getDisease().getSymptoms()  == null? ("N/A") : vitalSign.getDisease().getSymptoms();
            } else{
               row[1] = "No Disease";
               row[2] = "No symptoms";
            }
            row[3] = vitalSign.getDrug();
            row[4] = patient.getPrimaryDoc();
            row[5] = vitalSign.getHospitalName();
            row[6] = vitalSign.getDateAttended();
            row[7] = vitalSign.getStatus();
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        medicalHistoryTable = new javax.swing.JTable();
        backBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 204, 204));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        jLabel1.setText("Patient Medical History");

        medicalHistoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Vital ID", "Disease", "Symptoms", "Medication", "Doctor", "Hospital", "Date Attended", "Status"
            }
        ));
        jScrollPane1.setViewportView(medicalHistoryTable);

        backBtn.setBackground(new java.awt.Color(255, 153, 153));
        backBtn.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        backBtn.setText(">> Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(398, 398, 398)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1053, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(backBtn))))
                .addContainerGap(134, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jLabel1)
                .addGap(43, 43, 43)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addComponent(backBtn)
                .addContainerGap(423, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        userProcessContainer.remove(this);
        CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
        cardLayout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable medicalHistoryTable;
    // End of variables declaration//GEN-END:variables
}
