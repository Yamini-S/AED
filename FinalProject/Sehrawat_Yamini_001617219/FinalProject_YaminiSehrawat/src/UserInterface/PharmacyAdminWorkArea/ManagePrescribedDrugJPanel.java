/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.PharmacyAdminWorkArea;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Medication.Drug;
import Business.Network.Network;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.SalesWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author PC
 */
public class ManagePrescribedDrugJPanel extends javax.swing.JPanel {

    /**
     * Creates new form NewJPanel
     */
    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private Enterprise enterprise;
    private EcoSystem ecoSystem;
    
    public ManagePrescribedDrugJPanel(JPanel upc, UserAccount ua, Enterprise ep, EcoSystem es) {
        initComponents();
        
        this.userProcessContainer = upc;
        this.userAccount = ua;
        this.enterprise = ep;
        this.ecoSystem = es;
        populateHospitalComboBox();
    }
    
    private void populateHospitalComboBox(){
        hospitalComboBox.removeAllItems();
        for(Network network:ecoSystem.getNetworkList()){
            for(Enterprise ep:network.getEnterpriseDirectory().getEnterpriseList()){
                if(ep.getEnterpriseType().getValue().equals("Hospital")){
                    if(ep.getAddress().getCity().equals(enterprise.getAddress().getCity())){
                        hospitalComboBox.addItem(ep);
                    }
                }
            }
        }
    }
    
    private void populateMedicineRequestTable(Enterprise ep){
        DefaultTableModel model = (DefaultTableModel) medicinesSalesTable.getModel();
        model.setRowCount(0);
        for (WorkRequest workRequest : enterprise.getWorkQueue().getWorkRequestList()) {
            if (workRequest instanceof SalesWorkRequest) {
                SalesWorkRequest salesRequest = (SalesWorkRequest) workRequest;
                if(ep.getEnterpriseId() == salesRequest.getHospitalID()){
                Object[] row = new Object[7];
                row[0] = salesRequest;
                row[1] = salesRequest.getDrug();
                row[2] = salesRequest.getQuantity();
                row[3] = salesRequest.getPatient().getName();
                row[4] = salesRequest.getDisease();
                row[5] = salesRequest.getPrescribedBy();
                row[6] = salesRequest.getHospitalName();
                model.addRow(row);
                
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        medicinesSalesTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        hospitalComboBox = new javax.swing.JComboBox();
        refreshBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        soldBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 204, 204));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        jLabel1.setText("Prescribed Medicines Sales ");

        medicinesSalesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Request ID", "Medicine", "Quantity", "Patient", "Disease", "PrescribedBY", "Hospital"
            }
        ));
        jScrollPane1.setViewportView(medicinesSalesTable);

        jLabel2.setBackground(new java.awt.Color(255, 153, 153));
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 23)); // NOI18N
        jLabel2.setText("Hospital : ");

        hospitalComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        hospitalComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hospitalComboBoxActionPerformed(evt);
            }
        });

        refreshBtn.setBackground(new java.awt.Color(255, 153, 153));
        refreshBtn.setFont(new java.awt.Font("Tahoma", 1, 23)); // NOI18N
        refreshBtn.setText("Refresh");
        refreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtnActionPerformed(evt);
            }
        });

        backBtn.setBackground(new java.awt.Color(255, 153, 153));
        backBtn.setFont(new java.awt.Font("Tahoma", 1, 23)); // NOI18N
        backBtn.setText(">> Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        soldBtn.setBackground(new java.awt.Color(255, 153, 153));
        soldBtn.setFont(new java.awt.Font("Tahoma", 1, 23)); // NOI18N
        soldBtn.setText("Assign Medicine ");
        soldBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                soldBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(32, 32, 32)
                .addComponent(hospitalComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(backBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(soldBtn))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(358, 358, 358)
                            .addComponent(jLabel1))
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1173, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(refreshBtn))
                .addGap(0, 47, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel1)
                .addGap(83, 83, 83)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(hospitalComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addComponent(refreshBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(soldBtn)
                    .addComponent(backBtn))
                .addContainerGap(339, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void soldBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_soldBtnActionPerformed
        int selectedRow = medicinesSalesTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row first!");
            return;
        }
        Drug drug = (Drug) medicinesSalesTable.getValueAt(selectedRow, 1);
        SalesWorkRequest swr = (SalesWorkRequest) medicinesSalesTable.getValueAt(selectedRow, 0);
        
        JOptionPane.showMessageDialog(null,"Medicine given to the patient as per the prescription given!");
    }//GEN-LAST:event_soldBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        userProcessContainer.remove(this);
        CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
        cardLayout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed

    private void refreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtnActionPerformed
        Enterprise enterprise = (Enterprise) hospitalComboBox.getSelectedItem();
        if (enterprise != null) {
            populateMedicineRequestTable(enterprise);
        }
    }//GEN-LAST:event_refreshBtnActionPerformed

    private void hospitalComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hospitalComboBoxActionPerformed
       Enterprise enterprise = (Enterprise) hospitalComboBox.getSelectedItem();
        if (enterprise != null) {
            populateMedicineRequestTable(enterprise);
        }
    }//GEN-LAST:event_hospitalComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JComboBox hospitalComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable medicinesSalesTable;
    private javax.swing.JButton refreshBtn;
    private javax.swing.JButton soldBtn;
    // End of variables declaration//GEN-END:variables
}
