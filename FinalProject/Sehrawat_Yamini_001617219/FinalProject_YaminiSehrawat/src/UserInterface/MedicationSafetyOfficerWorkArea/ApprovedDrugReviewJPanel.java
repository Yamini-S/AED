/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.MedicationSafetyOfficerWorkArea;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Medication.Drug;
import Business.Network.Network;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.DrugApprovalRequest;
import Business.WorkQueue.DrugReviewRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author PC
 */


public class ApprovedDrugReviewJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ApprovedDrugReviewJPanel
     */
    
    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private Enterprise enterprise;
    private EcoSystem ecoSystem;
    public ApprovedDrugReviewJPanel(JPanel upc, UserAccount ua, Enterprise ep,EcoSystem es) {
        initComponents();
        
        this.userProcessContainer = upc;
        this.userAccount = ua;
        this.enterprise = ep;
        this.ecoSystem = es;
        populateDrugComboBox();
        populatePlaceComboBox();
    }

    private void populateDrugComboBox(){
        drugComboBox.removeAllItems();
        for(WorkRequest workRequest:enterprise.getWorkQueue().getWorkRequestList()){
            if(workRequest instanceof DrugApprovalRequest){
                DrugApprovalRequest drugRequest = (DrugApprovalRequest)workRequest;
                
                for(Drug drug:drugRequest.getDrugCatalog().getDrugCatalog()){
                    if(drug.getStatus()==null){
                        return;
                    }else if (drug.getStatus().equals("Approved")){
                        drugComboBox.addItem(drug);
                       
                    }
                }
            }
        }
        
    }
    
    private void populateApprovedDrugInfoTable(Drug drug){
        DefaultTableModel model = (DefaultTableModel) drugInfoTable.getModel();
        model.setRowCount(0); 
        Object[] row = new Object[2];
        row[0] = drug.getDrugName();
        row[1] = drug;
        model.addRow(row);
            
    }
    
    private void populateDrugReviewTable(Drug drug){
        DefaultTableModel model = (DefaultTableModel) drugReviewTable.getModel();
        model.setRowCount(0);
        
        for(WorkRequest workRequest:drug.getWorkQueue().getWorkRequestList()){
            if(workRequest instanceof DrugReviewRequest){
                DrugReviewRequest reviewRequest = (DrugReviewRequest) workRequest;
                
                Object[] row = new Object[10];
                row[0] = reviewRequest.getRequestID();
                row[1] = drug.getDrugName();
                row[2] = drug;
                row[3] = reviewRequest.getSender() == null? ("N/A") : reviewRequest.getSender().getPerson().getName();
                row[4] = reviewRequest.getReceiver() == null? ("N/A") : reviewRequest.getReceiver().getPerson().getName();
                row[5] = reviewRequest.getePriseName();
                row[6] = reviewRequest.getCallBackRequest() == null? ("N/A") : (reviewRequest.getCallBackRequest());
                row[7] = reviewRequest.getStatus();
                row[8] = reviewRequest.getIsReplied() == null? ("N/A") : (reviewRequest.getIsReplied());
                row[9] = reviewRequest;
                model.addRow(row);
            }
        }
        
    }
    
    
    private void populatePlaceComboBox(){
        placeComboBox.removeAllItems();
        for (Network network : ecoSystem.getNetworkList()) {
            placeComboBox.addItem(network);
        }
    }
    
    private void populateEnterpriseComboBox(Network network){
        enterpriseComboBox.removeAllItems();
        for(Enterprise ep:network.getEnterpriseDirectory().getEnterpriseList()){
            if((ep.getEnterpriseType().getValue().equals("Hospital"))||
                (ep.getEnterpriseType().getValue().equals("Pharmacy"))){
                 enterpriseComboBox.addItem(ep);
            }
            
        }
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        drugComboBox = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        drugInfoTable = new javax.swing.JTable();
        refreshBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        drugReviewTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        enterpriseComboBox = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        placeComboBox = new javax.swing.JComboBox();
        sendBtn = new javax.swing.JButton();
        refreshTBtn = new javax.swing.JButton();
        checkReviewBtn = new javax.swing.JButton();
        callBackBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 204, 204));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        jLabel1.setText("Approved Drug Review Panel");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 23)); // NOI18N
        jLabel2.setText("Drug :");

        drugComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        drugComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drugComboBoxActionPerformed(evt);
            }
        });

        drugInfoTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Medicine", "Medicine Code"
            }
        ));
        jScrollPane1.setViewportView(drugInfoTable);

        refreshBtn.setFont(new java.awt.Font("Tahoma", 1, 23)); // NOI18N
        refreshBtn.setText("Refresh");
        refreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtnActionPerformed(evt);
            }
        });

        drugReviewTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Request ID", "Medicine Name", "Medicine Code", "Sender", "Receiver", "Organization", "CallBack", "Status", "Reviews", "Place"
            }
        ));
        jScrollPane2.setViewportView(drugReviewTable);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 23)); // NOI18N
        jLabel3.setText("Place: ");

        enterpriseComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 23)); // NOI18N
        jLabel4.setText("Enterprise :");

        placeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        placeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                placeComboBoxActionPerformed(evt);
            }
        });

        sendBtn.setFont(new java.awt.Font("Tahoma", 1, 23)); // NOI18N
        sendBtn.setText("Send");
        sendBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendBtnActionPerformed(evt);
            }
        });

        refreshTBtn.setFont(new java.awt.Font("Tahoma", 1, 23)); // NOI18N
        refreshTBtn.setText("Refresh");
        refreshTBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshTBtnActionPerformed(evt);
            }
        });

        checkReviewBtn.setFont(new java.awt.Font("Tahoma", 1, 23)); // NOI18N
        checkReviewBtn.setText("Check Reviews");
        checkReviewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkReviewBtnActionPerformed(evt);
            }
        });

        callBackBtn.setFont(new java.awt.Font("Tahoma", 1, 23)); // NOI18N
        callBackBtn.setText("CallBack");
        callBackBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                callBackBtnActionPerformed(evt);
            }
        });

        backBtn.setFont(new java.awt.Font("Tahoma", 1, 23)); // NOI18N
        backBtn.setText(">> Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(refreshTBtn)
                .addGap(33, 33, 33))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(backBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(495, 495, 495)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(164, 164, 164)
                        .addComponent(jLabel2)
                        .addGap(92, 92, 92)
                        .addComponent(drugComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1367, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(155, 155, 155)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(90, 90, 90)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addGap(59, 59, 59)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(enterpriseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(placeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(66, 66, 66)
                                        .addComponent(sendBtn))))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 581, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(refreshBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(584, 584, 584)
                        .addComponent(checkReviewBtn)
                        .addGap(66, 66, 66)
                        .addComponent(callBackBtn)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(drugComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(110, 110, 110)
                                .addComponent(refreshBtn)))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(placeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(35, 35, 35))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sendBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enterpriseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(refreshTBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkReviewBtn)
                    .addComponent(callBackBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                .addComponent(backBtn)
                .addGap(30, 30, 30))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void refreshTBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshTBtnActionPerformed
        Drug drug = (Drug) drugComboBox.getSelectedItem();
         if (drug != null) {
            populateDrugReviewTable(drug);
        }
    }//GEN-LAST:event_refreshTBtnActionPerformed

    private void drugComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drugComboBoxActionPerformed
       Drug drug = (Drug) drugComboBox.getSelectedItem();
        if (drug != null) {
            populateApprovedDrugInfoTable(drug);
            populateDrugReviewTable(drug);
        }
    }//GEN-LAST:event_drugComboBoxActionPerformed

    private void placeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_placeComboBoxActionPerformed
        Network place = (Network) placeComboBox.getSelectedItem();
        if (place != null) {
            populateEnterpriseComboBox(place);
        }
    }//GEN-LAST:event_placeComboBoxActionPerformed

    private void refreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtnActionPerformed
       Drug drug = (Drug) drugComboBox.getSelectedItem();
        if (drug != null) {
            populateApprovedDrugInfoTable(drug);
        }
    }//GEN-LAST:event_refreshBtnActionPerformed

    private void sendBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendBtnActionPerformed
        // Send for Review
        
        Network place = (Network) placeComboBox.getSelectedItem();
        Enterprise ePrise = (Enterprise) enterpriseComboBox.getSelectedItem();
        int selectedRow = drugInfoTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row first!");
            return;
        }
        Drug drug = (Drug) drugInfoTable.getValueAt(selectedRow, 1);
        if (place == null || ePrise == null || drug == null) {
            JOptionPane.showMessageDialog(null, "Please select all the values from the combo box");
            return;
        }
        
        DrugReviewRequest drugReviewRequest = new DrugReviewRequest();
        drugReviewRequest.setCity(place.getName());
        drugReviewRequest.setePriseName(ePrise.getName());
        drugReviewRequest.setSender(userAccount);
        drugReviewRequest.setPharmaceuticalName(enterprise.getName());
        drugReviewRequest.setStatus("Sent");
        drugReviewRequest.setIsReplied("No");
        drugReviewRequest.setCallBackRequest("Decision Pending");
        drugReviewRequest.getDrugCatalog().getDrugCatalog().add(drug);
        ePrise.getWorkQueue().getWorkRequestList().add(drugReviewRequest);
        drug.getWorkQueue().getWorkRequestList().add(drugReviewRequest);
        populateDrugComboBox();
    }//GEN-LAST:event_sendBtnActionPerformed

    private void callBackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_callBackBtnActionPerformed
        int selectedRow = drugReviewTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row first!");
            return;
        }
        Drug drug = (Drug) drugReviewTable.getValueAt(selectedRow, 2);
        DrugReviewRequest request = (DrugReviewRequest) drugReviewTable.getValueAt(selectedRow,9);
        if (!request.getIsReplied().equals("Yes")) {
            JOptionPane.showMessageDialog(null, "Customer has not replied yet!");
            return;
        }
        if (request.getCallBackRequest().equals("Yes")) {
            JOptionPane.showMessageDialog(null, "Drug already called Back!");
            return;
        }else{
            request.setCallBackRequest("Yes");
            request.setStatus("Drug WithDrawn");
            
            for (Drug drug1 : ecoSystem.getDrugCatalog().getDrugCatalog()) {
                if (drug1.getDrugId() == drug.getDrugId()) {
                    drug1.setStatus("Drug Disapproved");
                }
            }

            for (Drug drug2 : enterprise.getDrugCatalog().getDrugCatalog()) {
                if (drug2.getDrugId() == drug.getDrugId()) {
                    drug2.setStatus("Drug Disapproved");
                }
            }
        }
        
        if(drug !=null){
            populateDrugReviewTable(drug);
        }
        
        populateDrugComboBox();
        Drug d = (Drug) drugComboBox.getSelectedItem();
        populateDrugReviewTable(d);

    }//GEN-LAST:event_callBackBtnActionPerformed

    private void checkReviewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkReviewBtnActionPerformed
        int selectedRow = drugReviewTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row first!");
            return;
        }
        Drug drug = (Drug) drugReviewTable.getValueAt(selectedRow, 2);
        DrugReviewRequest request = (DrugReviewRequest) drugReviewTable.getValueAt(selectedRow,9);
        
        if (!request.getIsReplied().equals("Yes")) {
            JOptionPane.showMessageDialog(null, "Customer has not replied yet!");
            return;
        }
        CheckReviewsJPanel panel = new CheckReviewsJPanel(userProcessContainer, drug, request);
        userProcessContainer.add("CheckReviewsJPanel", panel);
        CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
        cardLayout.next(userProcessContainer);
    }//GEN-LAST:event_checkReviewBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JButton callBackBtn;
    private javax.swing.JButton checkReviewBtn;
    private javax.swing.JComboBox drugComboBox;
    private javax.swing.JTable drugInfoTable;
    private javax.swing.JTable drugReviewTable;
    private javax.swing.JComboBox enterpriseComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox placeComboBox;
    private javax.swing.JButton refreshBtn;
    private javax.swing.JButton refreshTBtn;
    private javax.swing.JButton sendBtn;
    // End of variables declaration//GEN-END:variables
}
