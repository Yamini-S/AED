/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.MedicationSafetyOfficerWorkArea;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.HealthOfficialAuthority.HOAuthority;
import Business.Medication.Drug;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.DrugApprovalRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author PC
 */
public class MedicineApprovalRequestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form MedicineApprovalRequestJPanel
     */
    
    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private Organization organization;
    private UserAccount userAccount;
    private HOAuthority authority;
    private EcoSystem ecoSystem;

    public MedicineApprovalRequestJPanel(JPanel upc, Organization org, UserAccount ua, HOAuthority authority, Enterprise enterprise, EcoSystem ecoSystem) {
        initComponents();
        
        this.organization = org;
        this.userAccount = ua;
        this.enterprise = enterprise;
        this.userProcessContainer = upc;
        this.authority = authority;
        this.ecoSystem = ecoSystem;
        populateMedicineApprovalTable();
    }

    private void populateMedicineApprovalTable(){
        DefaultTableModel model = (DefaultTableModel) medicineApprovalTable.getModel();
        model.setRowCount(0);
        
        for(WorkRequest workRequest: enterprise.getWorkQueue().getWorkRequestList()){
           
           if(workRequest instanceof DrugApprovalRequest){
               DrugApprovalRequest request = (DrugApprovalRequest)workRequest;
               for(Drug drug:request.getDrugCatalog().getDrugCatalog()){
                 Object[] row = new Object[8];
                    row[0] = request.getRequestID();
                    row[1] = drug.getDrugName();
                    row[2] = drug;
                    row[3] = drug.getDisease().getDiseaseName()== null ? ("N/A") : drug.getDisease().getDiseaseName();
                    row[4] = request.getSender() == null ? ("N/A") : request.getSender().getPerson().getName();
                    row[5] = request.getReceiver() == null ? ("N/A") : request.getReceiver().getPerson().getName();
                    row[6] = request;
                    row[7] = request.getMessage();
                    model.addRow(row);   
               }
               
           }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        medicineApprovalTable = new javax.swing.JTable();
        refreshBtn = new javax.swing.JButton();
        backBTn = new javax.swing.JButton();
        assignToMeBtn = new javax.swing.JButton();
        setDrugStatusBtn = new javax.swing.JButton();
        sendApprovalBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 204, 204));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        jLabel1.setText("Medicine Approval Request Panel");

        medicineApprovalTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Request ID", "Medicine", "Medicine Code", "Disease Cure", "Sender", "Receiver", "Status", "Approval Status"
            }
        ));
        jScrollPane1.setViewportView(medicineApprovalTable);

        refreshBtn.setBackground(new java.awt.Color(255, 153, 153));
        refreshBtn.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        refreshBtn.setText("Refresh");
        refreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtnActionPerformed(evt);
            }
        });

        backBTn.setBackground(new java.awt.Color(255, 153, 153));
        backBTn.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        backBTn.setText(">> Back");
        backBTn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBTnActionPerformed(evt);
            }
        });

        assignToMeBtn.setBackground(new java.awt.Color(255, 153, 153));
        assignToMeBtn.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        assignToMeBtn.setText("Assign To Me");
        assignToMeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignToMeBtnActionPerformed(evt);
            }
        });

        setDrugStatusBtn.setBackground(new java.awt.Color(255, 153, 153));
        setDrugStatusBtn.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        setDrugStatusBtn.setText("Set Drug Status");
        setDrugStatusBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setDrugStatusBtnActionPerformed(evt);
            }
        });

        sendApprovalBtn.setBackground(new java.awt.Color(255, 153, 153));
        sendApprovalBtn.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        sendApprovalBtn.setText("Send for Approval");
        sendApprovalBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendApprovalBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(343, 343, 343)
                .addComponent(assignToMeBtn)
                .addGap(96, 96, 96)
                .addComponent(setDrugStatusBtn)
                .addGap(89, 89, 89)
                .addComponent(sendApprovalBtn)
                .addContainerGap(76, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(351, 351, 351)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(backBTn)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(refreshBtn)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(73, 73, 73)
                .addComponent(refreshBtn)
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(83, 83, 83)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(assignToMeBtn)
                    .addComponent(setDrugStatusBtn)
                    .addComponent(sendApprovalBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 265, Short.MAX_VALUE)
                .addComponent(backBTn)
                .addGap(34, 34, 34))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void assignToMeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignToMeBtnActionPerformed
        int selectedRow = medicineApprovalTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row to assign the work to you!");
            return;
        }
        
        DrugApprovalRequest request = (DrugApprovalRequest) medicineApprovalTable.getValueAt(selectedRow,6);
        if(request.getStatus().equals("Sent")) {
            JOptionPane.showMessageDialog(null, "Drug has already been sent for approval");
            return;
        }
        if((request.getMessage().equals("Drug Approved"))||(request.getMessage().equals("Drug Disapproved"))){
            JOptionPane.showMessageDialog(null, "Drug status already set!");
            return;
        }
        request.setSender(userAccount);
        request.setStatus("In-progress");
        JOptionPane.showMessageDialog(null, "Work Assigned!");
        populateMedicineApprovalTable();
        
    }//GEN-LAST:event_assignToMeBtnActionPerformed

    private void setDrugStatusBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setDrugStatusBtnActionPerformed
        Drug drugs = null;
        int selectedRow = medicineApprovalTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row first!");
            return;
        }
        DrugApprovalRequest request = (DrugApprovalRequest) medicineApprovalTable.getValueAt(selectedRow,6);
        for(Drug dr:request.getDrugCatalog().getDrugCatalog()){
            if(request.getMessage() == null){
                JOptionPane.showMessageDialog(null, "Sorry, request has not been sent for approval!");
                return;
            }else if(request.getMessage().equals("Drug Approved")){
                if(dr.getStatus() == null){
                    dr.setStatus("Approved");
                    for (Drug dr1 : enterprise.getDrugCatalog().getDrugCatalog()) {
                        if (dr.getDrugCode() == dr1.getDrugCode()) {
                            dr1.setStatus("Approved");
                            drugs = dr1;
                            
                        }
                    }
                    if(!ecoSystem.getDrugCatalog().getDrugCatalog().contains(drugs)){
                        ecoSystem.getDrugCatalog().getDrugCatalog().add(drugs);
                    }
                }else{
                    JOptionPane.showMessageDialog(null, "Drug is already Approved");
                }
            
            }else if(request.getMessage().equals("Drug Dispproved")){
                    if(dr.getStatus() == null){
                        dr.setStatus("Disapproved");
                        for (Drug dr1 : enterprise.getDrugCatalog().getDrugCatalog()) {
                        if (dr.getDrugId() == dr1.getDrugId()) {
                            dr1.setStatus("Disapproved");
                        }
                    }

                } else {
                    JOptionPane.showMessageDialog(null, "Drug is already Disapproved");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Drug has not been approved or dissaproved yet");
            }
            return;
        
        }
        
    }//GEN-LAST:event_setDrugStatusBtnActionPerformed

    private void sendApprovalBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendApprovalBtnActionPerformed
        int selectedRow = medicineApprovalTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row first!");
            return;
        }
        DrugApprovalRequest request = (DrugApprovalRequest) medicineApprovalTable.getValueAt(selectedRow,6);
        if(request.getSender() == (null)){
            JOptionPane.showMessageDialog(null, "Please select a row to assign the work to you!");
            return;
        }
        
        if(request.getSender().getPerson().getName()!=(userAccount.getPerson().getName())){
            JOptionPane.showMessageDialog(null, "Please send the request for approval only assigned to you!");
            return;
       }
        
        if(request.getStatus().equals("Sent")){
            JOptionPane.showMessageDialog(null, "Request already sent to Health Official Authority for Analysis!");
            return;
        }
        
        request.setStatus("Sent");
        request.setMessage("Please review the druge to approve!");
        JOptionPane.showMessageDialog(null, "Request sent!");
        ecoSystem.getAuthority().getWorkQueue().getWorkRequestList().add(request);
        populateMedicineApprovalTable();
    }//GEN-LAST:event_sendApprovalBtnActionPerformed

    private void refreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtnActionPerformed
       populateMedicineApprovalTable();
    }//GEN-LAST:event_refreshBtnActionPerformed

    private void backBTnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBTnActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBTnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignToMeBtn;
    private javax.swing.JButton backBTn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable medicineApprovalTable;
    private javax.swing.JButton refreshBtn;
    private javax.swing.JButton sendApprovalBtn;
    private javax.swing.JButton setDrugStatusBtn;
    // End of variables declaration//GEN-END:variables
}
