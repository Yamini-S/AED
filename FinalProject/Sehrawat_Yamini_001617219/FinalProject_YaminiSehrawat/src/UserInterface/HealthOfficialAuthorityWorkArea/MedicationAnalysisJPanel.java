/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.HealthOfficialAuthorityWorkArea;

import Business.EcoSystem;
import Business.HealthOfficialAuthority.HOAuthority;
import Business.Medication.Drug;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.DrugApprovalRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author PC
 */
public class MedicationAnalysisJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CustomerMedicationAnalysisJPanel
     */
    
    private JPanel userProcessContainer;
    private EcoSystem ecoSystem;
    private HOAuthority authority;
    private UserAccount userAccount;
           
    public MedicationAnalysisJPanel(JPanel upc, UserAccount ua,  HOAuthority authority, EcoSystem ecoSystem) {
        initComponents();
        
        this.userProcessContainer = upc;
        this.userAccount = ua;
        this.authority = authority;
        this.ecoSystem = ecoSystem;
        populateMedicineAnalysisTable();
    }

    private void populateMedicineAnalysisTable(){
        DefaultTableModel model = (DefaultTableModel) medicineAnalysisTable.getModel();
        model.setRowCount(0);
        
        HOAuthority authority = ecoSystem.getAuthority();
        for(WorkRequest workRequest:authority.getWorkQueue().getWorkRequestList()){
            if(workRequest instanceof DrugApprovalRequest){
               DrugApprovalRequest drugApprovalRequest = (DrugApprovalRequest)workRequest;
                for(Drug drug:drugApprovalRequest.getDrugCatalog().getDrugCatalog()){
                    Object[] row = new Object[9];
                    row[0] = drugApprovalRequest.getRequestID();
                    row[1] = drug.getDrugName();
                    row[2] = drug;
                    row[3] = drug.getDisease().getDiseaseName();
                    row[4] = drugApprovalRequest.getSender() == null? ("N/A") :drugApprovalRequest.getSender().getPerson().getName();
                    row[5] = drugApprovalRequest.getReceiver() == null? ("N/A") : drugApprovalRequest.getReceiver().getPerson().getName();
                    row[6] = drugApprovalRequest;
                    row[7] = drugApprovalRequest.getMessage() == null? ("Evaluation Required") : workRequest.getMessage();
                    row[8] = drugApprovalRequest.getePriseName();
                    model.addRow(row);
                           
                }
                
            }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        medicineAnalysisTable = new javax.swing.JTable();
        refreshBtn = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        approveBtn = new javax.swing.JButton();
        disapproveBtn = new javax.swing.JButton();
        viewRequestBtn = new javax.swing.JButton();
        assignToMeBtn = new javax.swing.JButton();
        removeBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 204, 204));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        jLabel1.setText("Medication Analysis Panel");

        medicineAnalysisTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Request ID", "Medicine", "Medicine Code", "Disease Cure", "Sender", "Receiver", "Status", "Approval Status", "Organization"
            }
        ));
        jScrollPane1.setViewportView(medicineAnalysisTable);

        refreshBtn.setBackground(new java.awt.Color(255, 153, 153));
        refreshBtn.setFont(new java.awt.Font("Tahoma", 1, 23)); // NOI18N
        refreshBtn.setText("Refresh");
        refreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtnActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(255, 153, 153));
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 23)); // NOI18N
        jButton2.setText(">> Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        approveBtn.setBackground(new java.awt.Color(255, 153, 153));
        approveBtn.setFont(new java.awt.Font("Tahoma", 1, 23)); // NOI18N
        approveBtn.setText("Approve");
        approveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approveBtnActionPerformed(evt);
            }
        });

        disapproveBtn.setBackground(new java.awt.Color(255, 153, 153));
        disapproveBtn.setFont(new java.awt.Font("Tahoma", 1, 23)); // NOI18N
        disapproveBtn.setText("Disapprove");
        disapproveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                disapproveBtnActionPerformed(evt);
            }
        });

        viewRequestBtn.setBackground(new java.awt.Color(255, 153, 153));
        viewRequestBtn.setFont(new java.awt.Font("Tahoma", 1, 23)); // NOI18N
        viewRequestBtn.setText("View Request");
        viewRequestBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewRequestBtnActionPerformed(evt);
            }
        });

        assignToMeBtn.setBackground(new java.awt.Color(255, 153, 153));
        assignToMeBtn.setFont(new java.awt.Font("Tahoma", 1, 23)); // NOI18N
        assignToMeBtn.setText("Assign To Me");
        assignToMeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignToMeBtnActionPerformed(evt);
            }
        });

        removeBtn.setBackground(new java.awt.Color(255, 153, 153));
        removeBtn.setFont(new java.awt.Font("Tahoma", 1, 23)); // NOI18N
        removeBtn.setText("Remove");
        removeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(refreshBtn))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(507, 507, 507)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jButton2)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(assignToMeBtn)
                .addGap(260, 260, 260)
                .addComponent(approveBtn)
                .addGap(95, 95, 95)
                .addComponent(disapproveBtn)
                .addGap(134, 134, 134)
                .addComponent(viewRequestBtn)
                .addGap(42, 42, 42)
                .addComponent(removeBtn)
                .addContainerGap(31, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel1)
                .addGap(73, 73, 73)
                .addComponent(refreshBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(83, 83, 83)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(approveBtn)
                    .addComponent(disapproveBtn)
                    .addComponent(viewRequestBtn)
                    .addComponent(assignToMeBtn)
                    .addComponent(removeBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 267, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(38, 38, 38))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void assignToMeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignToMeBtnActionPerformed
        int selectedRow = medicineAnalysisTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row to assign the work to you!");
            return;
        }
        
        DrugApprovalRequest request = (DrugApprovalRequest) medicineAnalysisTable.getValueAt(selectedRow,6);
        if((request.getMessage().equals("Drug Approved"))||(request.getMessage().equals("Drug Disapproved"))){
            JOptionPane.showMessageDialog(null, "Drug status already set!");
            return;
        }
        request.setReceiver(userAccount);
        request.setStatus("In-progress");
        JOptionPane.showMessageDialog(null, "Work Assigned!");
        populateMedicineAnalysisTable();
        
    }//GEN-LAST:event_assignToMeBtnActionPerformed

    private void approveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approveBtnActionPerformed
        int selectedRow = medicineAnalysisTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row first!");
            return;
        }
        DrugApprovalRequest request = (DrugApprovalRequest) medicineAnalysisTable.getValueAt(selectedRow,6);
        if(request.getReceiver() == (null)){
            JOptionPane.showMessageDialog(null, "Please select a row to assign the work to you!");
            return;
        }
        
        if(request.getReceiver().getPerson().getName()!=(userAccount.getPerson().getName())){
            JOptionPane.showMessageDialog(null, "Please Approve the request only assigned to you.");
            return;
       }
        
        if(request.getMessage().equals("Drug Approved") || (request.getMessage().equals("Disapproved"))){
            JOptionPane.showMessageDialog(null, "Drug status already set. Please do not change!");
            return;
        }
        
        request.setStatus("Completed");
        request.setMessage("Drug Approved");
        JOptionPane.showMessageDialog(null, "Drug Approved!");
        populateMedicineAnalysisTable();
        
    }//GEN-LAST:event_approveBtnActionPerformed

    private void disapproveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disapproveBtnActionPerformed
        int selectedRow = medicineAnalysisTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row first!");
            return;
        }
        DrugApprovalRequest request = (DrugApprovalRequest) medicineAnalysisTable.getValueAt(selectedRow,6);
        if(request.getReceiver() == (null)){
            JOptionPane.showMessageDialog(null, "Please select a row to assign the work to you!");
            return;
        }
        
        if(request.getReceiver().getPerson().getName()!=(userAccount.getPerson().getName())){
            JOptionPane.showMessageDialog(null, "Please disapprove the request only assigned to you.");
            return;
       }
        
        if(request.getMessage().equals("Drug Approved") || (request.getMessage().equals("Disapproved"))){
            JOptionPane.showMessageDialog(null, "Drug status already set. Please do not change!");
            return;
        }
        
        request.setStatus("Completed");
        request.setMessage("Drug Dispproved");
        JOptionPane.showMessageDialog(null, "Drug disapproved!");
        populateMedicineAnalysisTable();
    }//GEN-LAST:event_disapproveBtnActionPerformed

    private void viewRequestBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewRequestBtnActionPerformed
        int selectedRow = medicineAnalysisTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row first!");
            return;
        }
        DrugApprovalRequest request = (DrugApprovalRequest) medicineAnalysisTable.getValueAt(selectedRow,6);
        Drug drug = (Drug)medicineAnalysisTable.getValueAt(selectedRow,2);
        ViewRequestJPanel panel = new ViewRequestJPanel(userProcessContainer, request, drug);
        userProcessContainer.add("ViewRequestJPanel", panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_viewRequestBtnActionPerformed

    private void refreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtnActionPerformed
        populateMedicineAnalysisTable();
    }//GEN-LAST:event_refreshBtnActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void removeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeBtnActionPerformed
        int selectedRow = medicineAnalysisTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row first!");
            return;
        }
        
        DrugApprovalRequest request = (DrugApprovalRequest) medicineAnalysisTable.getValueAt(selectedRow,6);
        Drug drug = (Drug)medicineAnalysisTable.getValueAt(selectedRow,2);
        int flag= JOptionPane.showConfirmDialog(this, "Are you sure want to remove?","Warning", JOptionPane.YES_NO_OPTION);
        
        if(flag==0){
            request.getDrugCatalog().getDrugCatalog().remove(drug);
            JOptionPane.showMessageDialog(null, "Record Deleted!");
        }else{
            JOptionPane.showMessageDialog(null, "Record NOT Deleted!");
        }
        populateMedicineAnalysisTable();
        
    }//GEN-LAST:event_removeBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton approveBtn;
    private javax.swing.JButton assignToMeBtn;
    private javax.swing.JButton disapproveBtn;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable medicineAnalysisTable;
    private javax.swing.JButton refreshBtn;
    private javax.swing.JButton removeBtn;
    private javax.swing.JButton viewRequestBtn;
    // End of variables declaration//GEN-END:variables
}
