/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.LabAssistantWorkArea;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.Patient.Patient;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.LabTestWorkRequest;
import Business.WorkQueue.PatientLabWorkRequest;
import Business.WorkQueue.WorkRequest;
import UserInterface.PatientWorkArea.CreateVitalSignJPanel;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author PC
 */
public class LabAssistantWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form LabAssistantWorkAreaJPanel
     */
    
    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private Organization organization;
    private Enterprise enterprise;
    private EcoSystem ecoSystem;
    private PatientLabWorkRequest labRequest;
    private Patient patient;
    private Date vitalDate;
    int rr = 0, hr = 0, bp = 0, weight = 0, pr=0;
    
    public LabAssistantWorkAreaJPanel(JPanel userProcessContainer, UserAccount ua, Organization org, Enterprise ep, EcoSystem es) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.userAccount = ua;
        this.organization = org;
        this.enterprise = ep;
        this.ecoSystem = es;
        populatePatientLabTestTable();
    }
    
    private void populatePatientLabTestTable(){
        DefaultTableModel model = (DefaultTableModel) patientLabTable.getModel();
        model.setRowCount(0);
        
        for(WorkRequest workRequest:organization.getWorkQueue().getWorkRequestList()){
            if(workRequest instanceof PatientLabWorkRequest){
                labRequest = (PatientLabWorkRequest)workRequest;
                
                Object[] row = new Object[8];
                row[0] = labRequest.getRequestID();
                row[1] = labRequest.getPatient().getPatientId();
                row[2] = labRequest.getPatient().getName();
                row[3] = labRequest.getMessage();
                row[4] = labRequest.getSender().getPerson().getName();
                row[5] = labRequest.getReceiver() == null ? ("N/A") : labRequest.getReceiver().getPerson().getName();
                row[6] = labRequest == null ? ("N/A") : labRequest;
                row[7] = labRequest.getTimeStamp();
                model.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        patientLabTable = new javax.swing.JTable();
        refreshBtn = new javax.swing.JButton();
        assignBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        createVitalBtn = new javax.swing.JButton();
        respRateTxt = new javax.swing.JTextField();
        heartRateTxt = new javax.swing.JTextField();
        pulseRateTxt = new javax.swing.JTextField();
        bloodPreTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        weightTxt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 204, 204));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        jLabel1.setText("Lab Assistant Work Area");

        patientLabTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Request ID", "Patient ID", "Patient Name", "Patient Tests", "Sender", "Receiver", "Status", "Timestamp"
            }
        ));
        jScrollPane1.setViewportView(patientLabTable);

        refreshBtn.setBackground(new java.awt.Color(255, 153, 153));
        refreshBtn.setFont(new java.awt.Font("Tahoma", 3, 23)); // NOI18N
        refreshBtn.setText("Refresh");
        refreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtnActionPerformed(evt);
            }
        });

        assignBtn.setBackground(new java.awt.Color(255, 153, 153));
        assignBtn.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        assignBtn.setText("Assign To Me");
        assignBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignBtnActionPerformed(evt);
            }
        });

        backBtn.setBackground(new java.awt.Color(255, 153, 153));
        backBtn.setFont(new java.awt.Font("Tahoma", 1, 23)); // NOI18N
        backBtn.setText(">> Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        createVitalBtn.setBackground(new java.awt.Color(255, 153, 153));
        createVitalBtn.setFont(new java.awt.Font("Tahoma", 1, 23)); // NOI18N
        createVitalBtn.setText("Create Vital Stats");
        createVitalBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createVitalBtnActionPerformed(evt);
            }
        });

        respRateTxt.setFont(new java.awt.Font("Tahoma", 0, 23)); // NOI18N

        heartRateTxt.setFont(new java.awt.Font("Tahoma", 0, 23)); // NOI18N

        pulseRateTxt.setFont(new java.awt.Font("Tahoma", 0, 23)); // NOI18N

        bloodPreTxt.setFont(new java.awt.Font("Tahoma", 0, 23)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setText("Respiratory Rate");

        weightTxt.setFont(new java.awt.Font("Tahoma", 0, 23)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel3.setText("Heart Rate");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel4.setText("Pulse Rate");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel5.setText("Blood Pressure ");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel7.setText("Weight");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(refreshBtn))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(416, 416, 416)
                        .addComponent(jLabel1)
                        .addGap(0, 441, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7))
                        .addGap(196, 196, 196))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(backBtn)
                            .addComponent(assignBtn))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(createVitalBtn)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(respRateTxt)
                        .addComponent(heartRateTxt)
                        .addComponent(pulseRateTxt)
                        .addComponent(bloodPreTxt)
                        .addComponent(weightTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(264, 264, 264))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(62, 62, 62)
                .addComponent(refreshBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(assignBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(respRateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(54, 54, 54)
                                .addComponent(jLabel3))
                            .addComponent(heartRateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(63, 63, 63)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(pulseRateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(66, 66, 66)
                        .addComponent(jLabel5))
                    .addComponent(bloodPreTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(63, 63, 63)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(weightTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backBtn)
                    .addComponent(createVitalBtn))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void assignBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignBtnActionPerformed
        int selectedRow = patientLabTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row to assign to you");
            return;
        }
        PatientLabWorkRequest request = (PatientLabWorkRequest)patientLabTable.getValueAt(selectedRow, 6);
        if(request.getStatus().equals("Completed")){
            JOptionPane.showMessageDialog(null, "Patient Report already sent!");
            return;
        }
                
        request.setReceiver(userAccount);
        request.setStatus("In-Progress");
        populatePatientLabTestTable();
        
        if(request.getReceiver()== null){
            JOptionPane.showMessageDialog(null, "Please assign the request to you first!");
            return;
        }
        JOptionPane.showMessageDialog(null, "Request assigned!");
    }//GEN-LAST:event_assignBtnActionPerformed

    private void refreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtnActionPerformed
        populatePatientLabTestTable();
    }//GEN-LAST:event_refreshBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        userProcessContainer.remove(this);
        CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
        cardLayout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed

    private void createVitalBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createVitalBtnActionPerformed
        vitalDate = new Date();
        int selectedRow = patientLabTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row to assign to you");
            return;
        }
        PatientLabWorkRequest patientRequest = (PatientLabWorkRequest)patientLabTable.getValueAt(selectedRow, 6);
        
        try {
            rr = Integer.parseInt(respRateTxt.getText());
            hr = Integer.parseInt(heartRateTxt.getText());
            bp = Integer.parseInt(bloodPreTxt.getText());
            pr = Integer.parseInt(pulseRateTxt.getText());
            weight = Integer.parseInt(weightTxt.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Please enter int for age");
        }
        
        if  (rr == 0 || hr == 0 || bp == 0 || pr == 0 || weight == 0) {
            JOptionPane.showMessageDialog(null, "Some of value is missing, please fill all the values", "warning", JOptionPane.WARNING_MESSAGE);
        } 
        
        if (!patientRequest.getStatus().equals("In-Progress")) {
            JOptionPane.showMessageDialog(null, "Please assign the lab patient request to you first");
            return;                             
        }           
         if(patientRequest.getStatus().equals("Completed")){
             JOptionPane.showMessageDialog(null, "Patient vital Sign has already been sent");
             return;
         } 
         
         patientRequest.setStatus("Completed");
         LabTestWorkRequest labRequest = new LabTestWorkRequest();
           labRequest.setSender(userAccount);
           labRequest.setRespRate(rr);
           labRequest.setBloodPressure(bp);
           labRequest.setPulseRate(pr);
           labRequest.sethRate(hr);
           labRequest.setWeight(weight);
           labRequest.setTimeStamp(vitalDate);
           labRequest.setStatus("Completed");
           labRequest.setPatient(patientRequest.getPatient());
           labRequest.setRequestId(patientRequest.getRequestID());
           patientRequest.getPatient().getWorkQueue().getWorkRequestList().add(labRequest);
            JOptionPane.showMessageDialog(null, "Vital Sign has been Successfully recorded",
                    "Information", JOptionPane.INFORMATION_MESSAGE);
            populatePatientLabTestTable();
        
       
    }//GEN-LAST:event_createVitalBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignBtn;
    private javax.swing.JButton backBtn;
    private javax.swing.JTextField bloodPreTxt;
    private javax.swing.JButton createVitalBtn;
    private javax.swing.JTextField heartRateTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable patientLabTable;
    private javax.swing.JTextField pulseRateTxt;
    private javax.swing.JButton refreshBtn;
    private javax.swing.JTextField respRateTxt;
    private javax.swing.JTextField weightTxt;
    // End of variables declaration//GEN-END:variables
}
